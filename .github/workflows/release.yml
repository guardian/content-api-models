name: Publish to Sonatype and NPM

on:
  workflow_dispatch:
  push:
    branches:
      - 'jsh/release-via-gh-actions'
  release:
    types: [published]

jobs:
  release_snapshot_sonatype:
    if: "github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          base: main  #see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#pull-request-events
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
          cache: sbt
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          # We cannot cache our environment, as it is dynamically generated by the plugin
      - name: Get tags
        run: git fetch --tags origin
      - name: Release pre-release version to Sonatype and NPM
        run: |
          VERSION=17.7.0
          if [[ ${VERSION:0:1} == "v" ]] ; then
            VERSION=${VERSION:1}
          fi
          if [[ ${VERSION: -9} != "-SNAPSHOT" ]] ; then
            echo "Version must end in -SNAPSHOT. Adding -SNAPSHOT suffix"
            VERSION="$VERSION-SNAPSHOT"
          fi
          echo $PGP_SECRET | base64 --decode | gpg --batch --import
          export GPG_TTY=$(tty)
          echo "Releasing version $VERSION Sonatype as snapshot"

          # No need to support NPM releases â€“ there's no direct analogue to a SNAPSHOT release.
          # Beta releases are classed as 'production' releases.
          sbt -J-Xss32M -DRELEASE_TYPE=snapshot "clean" "release cross release-version $VERSION with-defaults"

        env:
          # We use armour formatted files for keys, but we know the newlines they contain don't survive
          # passing through environment vars, so this secret should be an armour-formatted PGP key passed
          # through base64.
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  release_production_sonatype:
    # if: "github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          base: main  #see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#pull-request-events
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
          cache: sbt
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
      - name: Release Production to Sonatype
        run: |
          VERSION=17.7.0-beta.1
          if [[ ${VERSION:0:1} == "v" ]] ; then
            VERSION=${VERSION:1}
          fi

          if [[ ${VERSION: -9} == "-SNAPSHOT" ]] ; then
            echo "Version must NOT end in -SNAPSHOT."
            exit 1
          fi

          echo $PGP_SECRET | base64 --decode | gpg --batch --import
          export GPG_TTY=$(tty)
          echo "Releasing version $VERSION Sonatype as production"
          sbt -J-Xss32M -DRELEASE_TYPE=snapshot "clean" "release cross release-version $VERSION with-defaults" "project typescript" "releaseNpm $VERSION"
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
