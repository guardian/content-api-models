name: Release Sonatype

on:
  release:
    types: [published]

jobs:
  release_snapshot_sonatype:
    if: "github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          base: main  #see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#pull-request-events
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
          cache: sbt
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Release pre-release version to Sonatype and NPM
        run: |
          BASE_VERSION=$(git describe --tags | cut -f2 -d"@")

          if [[ ! $BASE_VERSION =~ (alpha|beta) ]] ; then
            echo "Received $BASE_VERSION, but the version number must be an npm-compatible alpha or beta release - please label preleases in an npm-compatible format, e.g. 17.7.0-alpha.0, 20.25.1-beta.5"
            exit 1
          fi

          if [[ ${BASE_VERSION:0:1} == "v" ]] ; then
            BASE_VERSION=${BASE_VERSION:1}
          fi

          # For Sonatype releases, we remove the beta prefix from the version, and add -SNAPSHOT instead.
          SONATYPE_VERSION=$(echo "$BASE_VERSION" | sed -e "s/-beta\.[[:digit:]]*//g")-SNAPSHOT

          NPM_VERSION="$BASE_VERSION"

          echo $PGP_SECRET | base64 --decode | gpg --batch --import
          export GPG_TTY=$(tty)
          echo "Releasing version $BASE_VERSION as pre-release to Sonatype as $SONATYPE_VERSION and NPM as $BASE_VERSION"
          echo "yes | sbt -DRELEASE_TYPE=snapshot \"clean\" \"release cross release-version $SONATYPE_VERSION with-defaults\" \"typescript/releaseNpm $NPM_VERSION\""
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

  release_production_sonatype:
    if: "! github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          base: main  #see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#pull-request-events
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
          cache: sbt
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Release Production to Sonatype
        run: |
          VERSION=$(git describe --tags | cut -f2 -d"@")
          if [[ ${VERSION:0:1} == "v" ]] ; then
            VERSION=${VERSION:1}
          fi

          if [[ ${VERSION: -9} == "-SNAPSHOT" ]] ; then
            echo "Version must NOT end in -SNAPSHOT."
            exit 1
          fi

          echo $PGP_SECRET | base64 --decode | gpg --batch --import
          export GPG_TTY=$(tty)
          echo "Releasing version $VERSION Sonatype as production"
          yes | sbt -DRELEASE_TYPE=production "clean" "release cross release-version $VERSION with-defaults" "typescript/releaseNpm $VERSION"
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
